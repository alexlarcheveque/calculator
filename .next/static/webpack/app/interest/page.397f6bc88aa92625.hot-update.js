"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/interest/page",{

/***/ "(app-pages-browser)/./src/components/interest/InterestPage.tsx":
/*!**************************************************!*\
  !*** ./src/components/interest/InterestPage.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatCurrency: function() { return /* binding */ formatCurrency; },\n/* harmony export */   formatPercentage: function() { return /* binding */ formatPercentage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _InterestForm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InterestForm */ \"(app-pages-browser)/./src/components/interest/InterestForm.tsx\");\n/* harmony import */ var _InterestSummary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./InterestSummary */ \"(app-pages-browser)/./src/components/interest/InterestSummary.tsx\");\n/* harmony import */ var _InterestCharts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./InterestCharts */ \"(app-pages-browser)/./src/components/interest/InterestCharts.tsx\");\n/* harmony import */ var _AccumulationScheduleTable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AccumulationScheduleTable */ \"(app-pages-browser)/./src/components/interest/AccumulationScheduleTable.tsx\");\n/* harmony import */ var _InterestInfoSection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./InterestInfoSection */ \"(app-pages-browser)/./src/components/interest/InterestInfoSection.tsx\");\n/* __next_internal_client_entry_do_not_use__ default,formatCurrency,formatPercentage auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nconst InterestPage = ()=>{\n    _s();\n    const [inputs, setInputs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        initialInvestment: 20000,\n        annualContribution: 5000,\n        monthlyContribution: 0,\n        contributionTiming: \"beginning\",\n        interestRate: 5,\n        compoundFrequency: \"annually\",\n        investmentLengthYears: 5,\n        investmentLengthMonths: 0,\n        taxRate: 0,\n        inflationRate: 3\n    });\n    const [results, setResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [showAccumulationSchedule, setShowAccumulationSchedule] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleInputChange = (field, value)=>{\n        setInputs((prev)=>({\n                ...prev,\n                [field]: value\n            }));\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Automatically calculate when inputs change\n        const P = inputs.initialInvestment || 0;\n        const annualRate = (inputs.interestRate || 0) / 100;\n        const taxRate = (inputs.taxRate || 0) / 100;\n        const inflationRate = (inputs.inflationRate || 0) / 100;\n        const years = (inputs.investmentLengthYears || 0) + (inputs.investmentLengthMonths || 0) / 12;\n        const annualContribution = inputs.annualContribution || 0;\n        const monthlyContribution = inputs.monthlyContribution || 0;\n        const contributionAtBeginning = inputs.contributionTiming === \"beginning\";\n        const compoundFrequency = inputs.compoundFrequency || \"annually\";\n        if (P < 0 || annualRate < 0 || years <= 0) {\n            setResults(null);\n            return;\n        }\n        const compoundPeriodsPerYearMap = {\n            annually: 1,\n            semiannually: 2,\n            quarterly: 4,\n            monthly: 12,\n            semimonthly: 24,\n            biweekly: 26,\n            weekly: 52,\n            daily: 365,\n            continuously: Infinity\n        };\n        const N = compoundPeriodsPerYearMap[compoundFrequency];\n        if (!N) {\n            setResults(null);\n            return;\n        }\n        const totalPeriods = years * N;\n        const periodicRate = compoundFrequency === \"continuously\" ? annualRate : annualRate / N;\n        const periodicTaxRate = taxRate / N; // Assuming tax is applied per compounding period on gains\n        let currentBalance = P;\n        let totalInterestEarned = 0;\n        let totalContributionsMade = 0;\n        let interestFromPrincipal = 0;\n        let interestFromContributions = 0;\n        let principalBalance = P;\n        let contributionsBalance = 0;\n        const schedule = [];\n        let cumulativeDeposit = P;\n        for(let i = 0; i < totalPeriods; i++){\n            let periodInterest = 0;\n            let periodContribution = 0;\n            let yearForSchedule = Math.floor(i / N) + 1;\n            let periodInYear = i % N + 1;\n            // Determine contribution for this period\n            if (N === 12 && monthlyContribution > 0) {\n                // Monthly contribution\n                periodContribution = monthlyContribution;\n            } else if (i % N === 0 && annualContribution > 0) {\n                // Annual contribution at start of compounding year for non-monthly\n                periodContribution = annualContribution;\n            }\n            if (contributionAtBeginning && periodContribution > 0) {\n                currentBalance += periodContribution;\n                contributionsBalance += periodContribution;\n                totalContributionsMade += periodContribution;\n                cumulativeDeposit += periodContribution;\n            }\n            let interestEarnedThisPeriod;\n            if (compoundFrequency === \"continuously\") {\n                if (i > 0) {\n                    // Apply continuous compounding for periods > 0\n                    const continuousGrowth = Math.exp(annualRate / N) - 1; // Effective rate for one Nth of a year\n                    interestEarnedThisPeriod = currentBalance * continuousGrowth;\n                } else {\n                    // For the very first sub-period of continuous, effectively it is like one period of N\n                    interestEarnedThisPeriod = currentBalance * (annualRate / N);\n                }\n            } else {\n                interestEarnedThisPeriod = currentBalance * periodicRate;\n            }\n            const taxableInterest = interestEarnedThisPeriod * (1 - taxRate);\n            totalInterestEarned += taxableInterest;\n            currentBalance += taxableInterest;\n            // Apportion interest to principal and contributions\n            if (currentBalance > 0 && interestEarnedThisPeriod > 0) {\n                const principalProportion = principalBalance / (principalBalance + contributionsBalance) || 0;\n                const contributionProportion = contributionsBalance / (principalBalance + contributionsBalance) || 0;\n                interestFromPrincipal += taxableInterest * principalProportion;\n                interestFromContributions += taxableInterest * contributionProportion;\n            }\n            principalBalance += taxableInterest * (principalBalance / (principalBalance + contributionsBalance) || 0);\n            contributionsBalance += taxableInterest * (contributionsBalance / (principalBalance + contributionsBalance) || 0);\n            if (!contributionAtBeginning && periodContribution > 0) {\n                currentBalance += periodContribution;\n                contributionsBalance += periodContribution;\n                totalContributionsMade += periodContribution;\n                cumulativeDeposit += periodContribution;\n            }\n            const isYearEnd = (i + 1) % N === 0 || i + 1 === totalPeriods;\n            schedule.push({\n                period: i + 1,\n                year: yearForSchedule,\n                deposit: P + totalContributionsMade,\n                interest: taxableInterest,\n                endingBalance: currentBalance,\n                isYearEnd: isYearEnd\n            });\n        }\n        // Adjust schedule for yearly summary if N > 1 and totalPeriods is not a multiple of N\n        if (N > 1 && totalPeriods % N !== 0 && schedule.length > 0) {\n            const lastEntry = schedule[schedule.length - 1];\n            if (!lastEntry.isYearEnd) {\n                // Find the last actual year end to ensure we have one if we didn't hit it naturally\n                let lastYearEndIdx = -1;\n                for(let k = schedule.length - 1; k >= 0; k--){\n                    if (schedule[k].isYearEnd) {\n                        lastYearEndIdx = k;\n                        break;\n                    }\n                }\n                // if the very last entry is not a year end, but it's the final period, mark it as a pseudo year-end for chart\n                if (lastYearEndIdx < schedule.length - 1) {\n                    schedule[schedule.length - 1].isYearEnd = true;\n                }\n            }\n        }\n        // Create a yearly summary if N > 1 for the table and potentially chart\n        const yearlySchedule = [];\n        if (N > 1) {\n            let yearDeposits = P; // Start with initial investment\n            let yearInterest = 0;\n            let lastYearEndBalance = P;\n            for(let y = 1; y <= Math.ceil(years); y++){\n                let yearEndBalanceForYear = lastYearEndBalance;\n                let depositsThisYear = 0;\n                let interestThisYear = 0;\n                const periodsInThisYear = schedule.filter((s)=>s.year === y);\n                periodsInThisYear.forEach((p)=>{\n                    // Summing contributions made during this year\n                    // This logic needs to be careful not to double count initial P\n                    // `p.deposit` in the main schedule is cumulative. So we need to find periodic deposit.\n                    const prevPeriodIdx = schedule.findIndex((s)=>s.period === p.period - 1);\n                    const prevDepositTotal = prevPeriodIdx !== -1 ? schedule[prevPeriodIdx].deposit : P;\n                    depositsThisYear += p.deposit - prevDepositTotal;\n                    interestThisYear += p.interest;\n                });\n                // If it is the first year, add initial investment to depositsThisYear if not already captured\n                if (y === 1 && !periodsInThisYear.some((p)=>p.period === 1 && p.deposit === P)) {\n                // This case should ideally not happen if initial P is correctly added to first period's deposit\n                }\n                yearDeposits += depositsThisYear; // This becomes cumulative for the year\n                yearInterest += interestThisYear; // Cumulative interest for the year\n                const yearEndEntry = periodsInThisYear[periodsInThisYear.length - 1];\n                if (yearEndEntry) yearEndBalanceForYear = yearEndEntry.endingBalance;\n                else if (yearlySchedule.length > 0) yearEndBalanceForYear = yearlySchedule[yearlySchedule.length - 1].endingBalance; // if no periods this year (e.g. fractional year)\n                yearlySchedule.push({\n                    period: y,\n                    year: y,\n                    deposit: yearDeposits,\n                    interest: interestThisYear,\n                    endingBalance: yearEndBalanceForYear,\n                    isYearEnd: true\n                });\n                lastYearEndBalance = yearEndBalanceForYear;\n            }\n        }\n        const displaySchedule = N === 1 ? schedule : yearlySchedule; // Use yearly if compounding is not annual\n        if (compoundFrequency === \"continuously\" && yearlySchedule.length === 0 && schedule.length > 0) {\n            // if continuous and only one year or less, yearlySchedule might be empty, use raw schedule\n            // but mark all as year end for chart\n            schedule.forEach((s)=>s.isYearEnd = true);\n        // displaySchedule = schedule;\n        }\n        const totalPrincipalInvested = P + totalContributionsMade;\n        const buyingPower = currentBalance / Math.pow(1 + inflationRate, years);\n        setResults({\n            endingBalance: currentBalance,\n            totalPrincipal: totalPrincipalInvested,\n            totalContributions: totalContributionsMade,\n            totalInterest: totalInterestEarned,\n            interestOfInitialInvestment: interestFromPrincipal,\n            interestOfContributions: interestFromContributions,\n            buyingPowerAfterInflation: buyingPower,\n            accumulationSchedule: displaySchedule.length > 0 ? displaySchedule : schedule\n        });\n        setShowAccumulationSchedule(true);\n    }, [\n        inputs\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-1 lg:grid-cols-12 gap-8 mb-16\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"lg:col-span-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_InterestForm__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            inputs: inputs,\n                            onInputChange: handleInputChange\n                        }, void 0, false, {\n                            fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                            lineNumber: 314,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                        lineNumber: 313,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"lg:col-span-8 space-y-8\",\n                        children: results && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_InterestSummary__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                    results: results\n                                }, void 0, false, {\n                                    fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                                    lineNumber: 321,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_InterestCharts__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    results: results,\n                                    inputs: inputs\n                                }, void 0, false, {\n                                    fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                                    lineNumber: 322,\n                                    columnNumber: 15\n                                }, undefined),\n                                showAccumulationSchedule && results.accumulationSchedule.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                            className: \"text-2xl font-semibold mb-4 text-center\",\n                                            children: \"Accumulation Schedule\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                                            lineNumber: 326,\n                                            columnNumber: 21\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AccumulationScheduleTable__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                            data: results.accumulationSchedule\n                                        }, void 0, false, {\n                                            fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                                            lineNumber: 329,\n                                            columnNumber: 21\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                                    lineNumber: 325,\n                                    columnNumber: 19\n                                }, undefined)\n                            ]\n                        }, void 0, true)\n                    }, void 0, false, {\n                        fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                        lineNumber: 318,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                lineNumber: 311,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_InterestInfoSection__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n                lineNumber: 340,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/alexlarcheveque/Coding/calculator/src/components/interest/InterestPage.tsx\",\n        lineNumber: 310,\n        columnNumber: 5\n    }, undefined);\n};\n_s(InterestPage, \"NaA2mVHKbHvoApnAcbOioCPWhJM=\");\n_c = InterestPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (InterestPage);\n// Helper function (can be moved to a utils file later)\nconst formatCurrency = (value)=>{\n    if (value === undefined || isNaN(value)) {\n        return \"$0.00\";\n    }\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n    }).format(value);\n};\nconst formatPercentage = (value)=>{\n    if (value === undefined || isNaN(value)) {\n        return \"0.00%\";\n    }\n    return value.toFixed(2) + \"%\";\n};\nvar _c;\n$RefreshReg$(_c, \"InterestPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/interest/InterestPage.tsx\n"));

/***/ })

});